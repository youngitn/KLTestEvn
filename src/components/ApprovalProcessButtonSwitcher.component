<apex:component >
    <apex:attribute description="Object Name" name="Status" type="String">
    </apex:attribute>
    <apex:attribute name="saveAction" 
    description="" type="ApexPages.Action" required="true"/>
    <apex:attribute name="cancelAction" 
    description="" type="ApexPages.Action" required="true"/>
    <apex:attribute name="isEditable" 
    description="" type="Boolean" required="true"/>
    <script>

	j$(function() {
        let btnEdit = j$('input[id$=btnEdit]');
        let btnSave = j$('input[id$=btnSave]');
        let btnCancel = j$('input[id$=btnCancel]');
        let btnCancelEdit = j$('input[id$=btnCancelEdit]');
		
        //一開始全部隱藏
        buttonInit(btnEdit,btnSave,btnCancel,btnCancelEdit);
        
        //新建表單頁面 隱藏編輯,和取消編輯按鈕
        if ('{!Status}' === 'NEW') {
            newIn(btnEdit,btnSave,btnCancel,btnCancelEdit);
            

        }//審批表單頁面
        else if ('{!Status}' === 'PROCESS') {
           inApprovalProcess(btnEdit,btnSave,btnCancel,btnCancelEdit);
                                   
        }//狀態不是已通過就是已拒絕
        else{
            approvalDone(btnEdit,btnSave,btnCancel,btnCancelEdit);
        }
        classSeting(btnEdit);
        classSeting(btnSave);
        classSeting(btnCancel);
        classSeting(btnCancelEdit);
        
            
    });

    //一進頁面的初始動作
    function buttonInit(btnEdit,btnSave,btnCancel,btnCancelEdit){
        btnEdit.hide();
        btnSave.hide();
        btnCancel.hide();
        btnCancelEdit.hide();
    }
    //創建頁面動作
    function newIn(btnEdit,btnSave,btnCancel,btnCancelEdit){
        btnSave.show();
        btnCancel.show();
    }
    //審批中動作
    function inApprovalProcess(btnEdit,btnSave,btnCancel,btnCancelEdit){
        //隱藏日期欄位下的"當日日期"點擊輸入字串
        j$('.dateFormat').hide(); 
        // 如果目前關卡有存在任何可編輯的欄位,編輯按鈕才開啟
        // 並執行可編輯的事件綁定&按鈕顯示
        if({!isEditable}){
            btnEdit.show();
            //先隱藏按下編輯紐才會出現的按鈕
            btnSave.hide();
            //新建頁面的取消在審批頁面不需要
            btnCancel.hide();
             //顯示按下編輯紐才會出現得按鈕 隱藏編輯紐   
             btnEdit.on('click', function(event) {
                 btnCancelEdit.show();
                 btnSave.show();
                 btnEdit.hide();
                 
            });

             //按下取消編輯紐 隱藏自己 顯示編輯紐
             btnCancelEdit.on('click', function(event) {
                 btnSave.hide();
                 btnEdit.show();
                 btnCancelEdit.hide()
             });
        }else{
                btnEdit.hide();   
        }
    }
    //已通過或已拒絕動作
    function approvalDone(btnEdit,btnSave,btnCancel,btnCancelEdit){
         btnSave.hide();
         btnCancel.hide();
    }

    function classSeting(domItem){
        domItem.removeAttr('class')
            .addClass("pure-button pure-button-primary pure-u-1-1 pure-u-md-1-4");
    }
    </script>
    <div class="pure-g">
        <div class="pure-u-1-1 pure-u-md-1-5">
        </div>
        <div class="pure-u-1-1 pure-u-md-1-5 ">
            <apex:commandbutton styleclass="action-btn" action="{!saveAction}" id="btnSave" value="儲存">
            </apex:commandbutton>
            <input id="btnCancelEdit" class ="action-btn" type="button" value="取消">
            </input>
        
        
            <apex:commandbutton styleclass="action-btn" action="{!cancelAction}" id="btnCancel" value="取消">
            </apex:commandbutton>
        
        
            <input id="btnEdit" class ="action-btn" type="button" value="編輯">
            </input>
            
        </div>
        
    </div>
</apex:component>